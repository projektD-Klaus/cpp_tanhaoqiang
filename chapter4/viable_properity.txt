作用域是从空间角度来分析的，分全局和局部变量．
变量还有一种属性：　存储期，也称生命期．　分静态存储器和动态存储期．
静态存储：系统分配固定存储空间
动态存储：系统动态地分配存储空间

全局变量全部在静态存储空间　程序开始时分配，结束时候释放．


动态存储区存放　１．形参　２．函数中的自动变量（未加ｓｔａｔｉｃ声明的局部变量）
３．函数调用时的现场保护和返回地址
对以上这些数据，在函数调用开始时分配动态存储
空间，函数结束时释放这些空间。在程序执行过程
中，这种分配和释放是动态的，如果在一个程序中
两次调用同一函数，则要进行两次分配和释放，而
两次分配给此函数中局部变量的存储空间地址可能
是不相同的


C++中变量除了有数据类型的属性之外，还有存
储类别(storage class)的属性。存储类别指的是数
据在内存中存储的方法。存储方法分为静态存储和
动态存储两大类。具体包含4种：自动的(auto)、 静
态的(static)、 寄存器的(register)和外部的(extern)。
根据变量的存储类别，可以知道变量的作用域和存
储期．

１auto
函数中的局部变量，如果不用关键字static加以声
明，编译系统对它们是动态地分配存储空间的。函
数的形参和在函数中定义的变量(包括在复合语句
中定义的变量)都属此类。在调用该函数时，系统
给形参和函数中定义的变量分配存储空间，数据存
储在动态存储区中。在函数调用结束时就自动释放
这些空间。如果是在复合语句中定义的变量，则在
变量定义时分配存储空间，在复合语句结束时自动
释放空间。因此这类局部变量称为自动变量(auto
variable)。 自动变量用关键字auto作存储类别的声
明
2 static
时希望函数中的局部变量的值在函数调用结束后
不消失而保留原值，即其占用的存储单元不释放，
在下一次该函数调用时，该变量保留上一次函数调
用结束时的值。这时就应该指定该局部变量为静态
局部变量(static local variable)
3 register
为提高执行效率， C++允许将局部变量的值放在
CPU中的寄存器中，需要用时直接从寄存器取出参
加运算，不必再到内存中去存取。这种变量叫做寄
存器变量，用关键字register作声明
４　全局变量(外部变量)是在函数的外部定义的，它的
作用域为从变量的定义处开始，到本程序文件的末
尾。在此作用域内，全局变量可以为本文件中各个
函数所引用。编译时将全局变量分配在静态存储区。
有时需要用extern来声明全局变量，以扩展全局变
量的作用域
